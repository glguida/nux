SUBDIRS+= apxhefi

ifeq (@MACHINE@,amd64)
ARCH=x86_64
GNUEFI_CFLAGS += -mno-red-zone
LDFLAGS += --target efi-app-$(ARCH)
endif

ifeq (@MACHINE@,i386)
ARCH=ia32
GNUEFI_CFLAGS += -mno-red-zone
OBJCOPY_FLAGS += --target efi-app-$(ARCH)
endif

ifeq (@MACHINE@,riscv64)
ARCH=riscv64
OBJCOPY_FLAGS += -O binary
LDFLAGS += --defsym=EFI_SUBSYSTEM=0xa
endif

NUXROOT 		= ${CURDIR}/$(SRCROOT)/..
CONTRIBDIR 		= $(NUXROOT)/contrib
GNUEFI_SRC 		= $(CONTRIBDIR)/gnu-efi

GNUEFI_INC		= $(GNUEFI_SRC)/inc
GNUEFI_CFLAGS_INCS	= -I$(GNUEFI_INC) -I$(GNUEFI_INC)/$(ARCH) \
			  -I$(GNUEFI_INC)/protocol
GNUEFI_LIB		= $(GNUEFI_SRC)
GNUEFI_CRT_OBJS		= $(GNUEFI_LIB)/$(ARCH)/gnuefi/crt0-efi-$(ARCH).o
GNUEFI_LDS		= $(GNUEFI_SRC)/gnuefi/elf_$(ARCH)_efi.lds

GNUEFI_CFLAGS += $(GNUEFI_CFLAGS_INCS) -fno-stack-protector -fshort-wchar \
	  -Wall -nostdinc -ffreestanding -fno-builtin -fPIC -Wno-implicit-function-declaration

#Add elf.h
GNUEFI_CFLAGS+= -I$(CONTRIBDIR)/include
# Add libec this is called from multiple subdirectories so we have to do this.
GNUEFI_CFLAGS+= -I$(NUXROOT)/libec #-I../$(GNUEFI_SRC)/../../libec -I../../$(GNUEFI_SRC)/../../libec

ifeq ($(ARCH),x86_64)
  CFLAGS += -DEFI_FUNCTION_WRAPPER -I.
endif

LDFLAGS         = -nostdlib -znocombreloc -T $(GNUEFI_LDS) -shared \
		  -Bsymbolic -L $(GNUEFI_LIB)/${ARCH}/gnuefi -L $(GNUEFI_LIB)/${ARCH}/lib $(GNUEFI_CRT_OBJS)

CFLAGS		= $(GNUEFI_CFLAGS)
vpath efi-main.c $(SRCDIR)
EFIOBJS 	= $(OBJDIR)/efi-main.o
EFITARGET	= apxh.efi

$(OBJDIR):
	mkdir -p $(OBJDIR)

$(OBJDIR)/efi-%.o: efi-%.c $(OBJDIR)
	$(CC) $(CFLAGS) -c $< -o $@

.PHONY: gnu-efi
gnu-efi: $(GNUEFI_LIB)/$(ARCH)/gnuefi/libgnuefi.a

$(GNUEFI_LIB)/$(ARCH)/gnuefi/libgnuefi.a:
	$(MAKE) -C $(GNUEFI_SRC) OBJDIR=$(GNUEFI_SRC)/$(ARCH) ARCH=$(ARCH) CC=$(CC) CFLAGS='$(GNUEFI_CFLAGS)' AR=$(AR) LD=$(LD) OBJCOPY=$(OBJCOPY) gnuefi

apxh.so: $(EFIOBJS)  subdirs
	$(LD) $(LDFLAGS) --start-group $(EFIOBJS) apxhefi/$(OBJDIR)/apxhefi.apxh_main.o -lefi -lgnuefi --end-group -o $@


%.efi: %.so
	$(OBJCOPY) -j .text* -j .sdata -j .data -j .dynamic \
		-j .rodata -j .rel -j .rela -j .rel.* -j .rela.* -j .rel* -j.rela* -j .areloc -j .reloc  \
		$^ $@ $(OBJCOPY_FLAGS)


.PHONY: clean_efi
clean_efi:
	$(MAKE) -C $(GNUEFI_SRC) clean
	-rm *.o *.so *.efi

ALL_TARGET	+= gnu-efi apxh.efi
CLEAN_TARGET	+= clean_efi
