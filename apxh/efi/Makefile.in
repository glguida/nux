SUBDIRS+= apxhefi

ifeq (@MACHINE@,amd64)
ARCH=x86_64
endif

ifeq (@MACHINE@,i386)
ARCH=ia32
endif

EFIINC          = /usr/include/efi
EFIINCS         = -I$(EFIINC) -I$(EFIINC)/$(ARCH) -I$(EFIINC)/protocol
LIB             = /usr/lib64
EFILIB          = /usr/lib64/gnuefi
EFI_CRT_OBJS    = $(EFILIB)/crt0-efi-$(ARCH).o
EFI_LDS         = $(EFILIB)/elf_$(ARCH)_efi.lds

CFLAGS          = $(EFIINCS) -fno-stack-protector -fpic \
		  -fshort-wchar -mno-red-zone -Wall -nostdinc -ffreestanding
ifeq ($(ARCH),x86_64)
  CFLAGS += -DEFI_FUNCTION_WRAPPER
endif

LDFLAGS         = -nostdlib -znocombreloc -T $(EFI_LDS) -shared \
		  -Bsymbolic -L $(EFILIB) -L $(LIB) $(EFI_CRT_OBJS)

EFIOBJS 	= efi-main.o
EFITARGET	= apxh.efi

apxh.so: $(EFIOBJS)  subdirs
	$(LD) $(LDFLAGS) --start-group $(EFIOBJS) apxhefi/apxhefi.apxh_main.o --end-group -o $@ -lefi -lgnuefi


%.efi: %.so
	objcopy -j .text* -j .sdata -j .data -j .dynamic \
		-j .dynsym  -j .rel -j .rela -j .reloc \
		--target=efi-app-$(ARCH) $^ $@

.PHONY: clean_efi
clean_efi:
	-rm *.o *.so *.efi

ALL_TARGET	+= apxh.efi
CLEAN_TARGET	+= clean_efi

